//create variable with '$'
$primary-color: #444;
$secondary-color: #eece1a;
$show-home-image: true; //creating variable show-home-image adında
$home-image: url(../img/background.jpg);
$background-opacity: 0.9;

// eğer return yoksa mixin yaratırız ama return varsa fonksiyon
@mixin easeOut {
  transition: all 0.5s ease-out;
  // herşey transition olabilsin diye all yaptık ikinci argümanda süre belirtiyor üçüncü argümanda eylemi
}

@mixin background {
  @if $show-home-image {
    &#bg-img {
      background: $home-image;
      background-attachment: fixed;
      background-size: cover;
    }

    &::after {
      //pseudo elementler html de olmayan ama cssde yarataılabilen beraber kullanıldığı elementlerden önce ve sonra gelen sanal elementlerdir

      //.overlay ile bir div sınıfı yaparak da halledebilirdik bunu, ama buna ihtiyaç duymadan hallettik
      content: "";
      position: absolute; //bütün ekranı kaplamasını istiyoruz
      top: 0;
      right: 0; //Yukardan ve sağdan 0 dan başlaycaak
      width: 100%;
      height: 100%;
      z-index: -1;
      background: rgba($primary-color, $background-opacity);
    }
  }
}

// Set Text Color : Eğer background rengi değiştirilirse, açık bir renk yapılırsa yazılar görünmesi için siyah oluyor
@function set-text-color($color) {
  @if lightness($color) > 40 {
    @return #000;
  } @else {
    @return #fff;
  }
}

//Media Query Mixins

@mixin mediaSm {
  @media screen and (max-width: 500px) {
    //500px ve altı için
    @content;
  }
}

@mixin mediaMd {
  @media screen and (max-width: 768px) {
    @content;
  }
}

@mixin mediaLg {
  @media screen and (min-width: 769px) and (max-width: 1170px) {
    @content;
  }
}

@mixin mediaXL {
  @media screen and (min-width: 1171px) {
    @content;
  }
}
